    1  git clone https://github.com/amitvashisttech/k8s-vmware-Rnd-17Aug2020.git
    2  ls
    3  cd k8s-vmware-Rnd-17Aug2020/
    4  ls
    5  cd 02-K8s/
    6  ls
    7  cd 01-Setup/
    8  ls
    9  vi install-kubernetes.sh 
   10  ip addr 
   11  vi install-kubernetes.sh 
   12  ls
   13  vim install-kubernetes.sh 
   14  ./install-kubernetes.sh 
   15  mkdir -p $HOME/.kube;  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config; sudo chown $(id -u):$(id -g) $HOME/.kube/config
   16  kubectl get nodes 
   17  docker version 
   18  docker ps 
   19  kubectl get pods 
   20  kubectl get pods -n kube-system
   21  kubectl get pods 
   22  kubectl get nodes 
   23  ls
   24  kubectl get nodes 
   25  watch -n .5 kubectl get nodes 
   26  watch -n .1 kubectl get nodes 
   27  kubectl get nodes 
   28  kubectl cluster-info
   29  kubectl versions
   30  kubectl version
   31  kubectl api-versions
   32  kubectl api-resources
   33  kubectl proxy --port=8080 &
   34  netstat -tulnp | grep -i 8080
   35  curl localhost
   36  curl localhost:8080
   37  curl localhost:8080/api
   38  curl localhost:8080/api/v1
   39  curl localhost:8080/api/v1/services/status
   40  curl localhost:8080/api/v1/
   41  curl localhost:8080/api/v1/pods
   42  kubectl get pods 
   43  kubectl get ns
   44  kubectl get pods 
   45  kubectl get pods -n kube-system
   46  curl localhost:8080/api/v1/pods
   47  kubectl get pods -n kube-system
   48  curl localhost:8080/api/v1/pods | grep -i "etcd-ip-172-31-2-77"
   49  kubectl config get-cluters
   50  kubectl config get-cluter
   51  kubectl config view
   52  cd 
   53  ls
   54  cd .kube/
   55  ls
   56  cat config 
   57  cat /etc/kubernetes/admin.conf 
   58  cd 
   59  ls
   60  cd k8s-vmware-Rnd-17Aug2020/
   61  ls
   62  cd 02-K8s/
   63  ls
   64  history > Day2_History.txt
   65  kubectl run first-Pod --image=amitvashist7/get-started:part2 --port=80
   66  kubectl run firstPod --image=amitvashist7/get-started:part2 --port=80
   67  kubectl create firstPod --image=amitvashist7/get-started:part2 --port=80
   68  kubectl --help
   69  kubectl create --help
   70  kubectl create firstpod --image=amitvashist7/get-started:part2 --port=80
   71  kubectl run pod --name firstpod --image=amitvashist7/get-started:part2 --port=80
   72  kubectl run pod firstpod --image=amitvashist7/get-started:part2 --port=80
   73  kubectl run firstpod --image=amitvashist7/get-started:part2 --port=80
   74  kubectl run FirstPod --image=amitvashist7/get-started:part2 --port=80
   75  kubectl run secoundpod --image=amitvashist7/get-started:part2 --port=80
   76  kubectl get pods 
   77  kubectl delete pod pod
   78  kubectl get pods 
   79  ls
   80  history > Day2_History.txt 
   81  cd ..
   82  git add . ; git commit -m "Day2_History.txt" ; git push 
   83  ls
   84  cd k8s-vmware-Rnd-17Aug2020/
   85  ls
   86  git pull 
   87  ls
   88  cd 02-K8s/
   89  ls
   90  cd 02-First-App/
   91  ls
   92  vim helloworld.yml 
   93  ls
   94  kubectl create -f helloworld.yml 
   95  kubectl get pods 
   96  kubectl delete -f helloworld.yml 
   97  kubectl create -f helloworld.yml 
   98  cat helloworld.yml 
   99  ls
  100  cd ..
  101  ls
  102  git pull 
  103  ls
  104  cd 03-Replication-controller/
  105  ls
  106  kubectl get pods 
  107  kubectl del
  108  kubectl get pods 
  109  ls
  110  cat helloworld-repl-controller.yml 
  111  kubectl get rc 
  112  kubectl get pods 
  113  kubectl create -f helloworld-repl-controller.yml 
  114  kubectl get rc 
  115  kubectl get pods 
  116  kubectl get rc 
  117  kubectl scale --replicas=10 rc helloworld-controller
  118  kubectl get pods 
  119  kubectl get pods -o wide 
  120  kubectl scale --replicas=1 rc helloworld-controller
  121  kubectl get pods -o wide 
  122  kubectl delete pod helloworld-controller-9w8sl
  123  kubectl get pods -o wide 
  124  kubectl scale --replicas=2 rc helloworld-controller
  125  kubectl get pods -o wide 
  126  kubectl delete helloworld-controller-84p9l helloworld-controller-x5rvt
  127  kubectl delete pod helloworld-controller-84p9l helloworld-controller-x5rvt
  128  kubectl get pods -o wide 
  129  kubectl get rc -n kube-system
  130  kubectl get rs  -n kube-system
  131  kubectl scale --replicas=10 rc helloworld-controller
  132  kubectl get pods -o wide 
  133  kubectl scale --replicas=1 rc helloworld-controller
  134  kubectl get pods -o wide 
  135  ls
  136  cd ..
  137  ls
  138  history > Day2_History.txt 
  139  ls
  140  cd ..
  141  ls
  142  git add . ; git commit -m "Day2_History.txt"; git push 
  143  ls
  144  git pull
  145  ls
  146  git pu;; 
  147  git pull
  148  ls
  149  cd 02-K8s/
  150  git pu;; 
  151  git pull
  152  s
  153  cd 
  154  ls
  155  cd k8s-vmware-Rnd-17Aug2020/
  156  ls
  157  git pull 
  158  ls
  159  cd 02-K8s/
  160  ls
  161  cd 04-Deployment/
  162  ls
  163  cat README.md 
  164  ls
  165  cat helloworld.yml 
  166  kubectl get pods 
  167  kubectl delete rc 
  168  kubectl delete rc helloworld-controller
  169  kubectl get pods 
  170  ls
  171  kubectl create -f helloworld.yml 
  172  kubectl get deploy
  173  kubectl get rs
  174  kubectl get pods
  175  kubectl scale --replicas=10 deploy helloworld-deployment
  176  kubectl get pods
  177  kubectl expose deploy helloworld-deployment --type=NodePort
  178  kubectl get svc 
  179  kubectl get pods
  180  kubectl set image deployment helloworld-deployment k8s-demo=amitvashist7/k8s-tiny-web:2
  181  kubectl get pods
  182  watch -n .1 kubectl get pods
  183  kubectl get rs 
  184  kubectl set image deployment helloworld-deployment k8s-demo=amitvashist7/k8s-tiny-web:3
  185  watch -n .1 kubectl get pods
  186  kubectl rollout status deployment helloworld-deployment 
  187  kubectl set image deployment helloworld-deployment k8s-demo=amitvashist7/k8s-tiny-web:2
  188  kubectl rollout status deployment helloworld-deployment 
  189  kubectl rollout undo deployment helloworld-deployment 
  190  kubectl rollout status deployment helloworld-deployment 
  191  kubectl get pods 
  192  kubectl get rs
  193  kubectl rollout undo deployment helloworld-deployment 
  194  kubectl get rs
  195  kubectl rollout history deployment helloworld-deployment 
  196  kubectl rollout history deployment helloworld-deployment --resivsion=1
  197  kubectl rollout history deployment helloworld-deployment --revision=1
  198  kubectl rollout history deployment helloworld-deployment --revision=5
  199  kubectl rollout history deployment helloworld-deployment --revision=6
  200  kubectl rollout history deployment helloworld-deployment 
  201  kubectl set image deployment helloworld-deployment k8s-demo=amitvashist7/k8s-tiny-web:4 --record=true
  202  kubectl rollout history deployment helloworld-deployment 
  203  kubectl rollout undo deployment helloworld-deployment  --to-revision=1
  204  kubectl rollout history deployment helloworld-deployment 
  205  kubectl describe deployment helloworld-deployment
  206  ls
  207  kubectl delete -f helloworld.yml 
  208  kubectl get svc 
  209  kubectl delete svc helloworld-deployment
  210  ls
  211  cd ..
  212  ls
  213  history > Day2_History.txt 
  214  git add . ; git commit -m "Day2_History.txt"; git push 
  215  kubectl get pods -n kube-system
  216  iptables -L
  217  ls
  218  cd k8s-vmware-Rnd-17Aug2020/
  219  ls
  220  kubectl get nodes 
  221  ls
  222  cd 02-K8s/
  223  ls
  224  git pull
  225  ls
  226  cd 05-App-with-Service
  227  ls
  228  cat README.md 
  229  ls
  230  cat helloworld.yml 
  231  kubectl create -f helloworld.yml 
  232  ls
  233  kubectl get pods 
  234  kubectl get svc 
  235  ls
  236  kubectl get pods 
  237  kubectl describe pods  tiny-webapp
  238  docker images 
  239  ls
  240  cat helloworld-service.yml 
  241  kubectl create -f helloworld-service.yml 
  242  kubectl get svc 
  243  kubectl edit svc helloworld-service
  244  kubectl get svc 
  245  kubectl describe svc helloworld-service
  246  ls
  247  cat helloworld-service.yml 
  248  kubectl get pods -o  wide
  249  kubectl get svc 
  250  ls
  251  cat helloworld-tomcat.yaml 
  252  kubectl describe svc helloworld-service
  253  kubectl create -f helloworld-tomcat.yaml 
  254  kubectl get pods 
  255  kubectl describe svc helloworld-service
  256  kubect lget svc 
  257  kubectl get pods -o wide 
  258  ls
  259  cat helloworld-nodeport-service.yml 
  260  kubectl get svc 
  261  kubectl apply -f helloworld-nodeport-service.yml 
  262  kubectl get svc 
  263  kubectl delete svc helloworld-service
  264  kubectl apply -f helloworld-nodeport-service.yml 
  265  kubectl get svc 
  266  kubectl describe  svc helloworld-service
  267  ls
  268  cat helloworld.yml  >> app-with-svc.yaml
  269  cat helloworld-nodeport-service.yml  >> app-with-svc.yaml
  270  vim app-with-svc.yaml 
  271  ls
  272  kubectl create -f app-with-svc.yaml 
  273  kubectl delete -f app-with-svc.yaml 
  274  vim app-with-svc.yaml 
  275  kubectl create -f app-with-svc.yaml 
  276  kubectl get pods,svc
  277  ls
  278  cd ..
  279  ls
  280  history > Day3_History.txt 
  281  cd ../; git add . ; git commit -m "Day3_History.txt"; git push 
  282  ls
  283  cd 02-K8s/
  284  ls
  285  cd 05-App-with-Service-2/
  286  ls
  287  cat helloworld-pythonwebapp.yaml 
  288  ls
  289  cat helloworld.yml 
  290  cat helloworld-pythonwebapp.yaml 
  291  cat helloworld-service.yml 
  292  cat pythonweb-service.yaml 
  293  ls
  294  cd ..
  295  ls
  296  cd ..
  297  git config --list
  298  ls
  299  cd 02-K8s/
  300  ls
  301  kubectl create -f 05-App-with-Service-2/
  302  kubectl get svc 
  303  ls
  304  kubectl delete -f 05-App-with-Service-2/
  305  ls
  306  cd ..
  307  ls
  308  git pull
  309  ls
  310  cd 02-K8s/
  311  ls
  312  cd 06-Dashboard/
  313  ls
  314  cat README.md 
  315  kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-rc7/aio/deploy/recommended.yaml
  316  kubectl get ns 
  317  kubectl get pods,deploy,svc -n kubernetes-dashboard
  318  ls
  319  cat sample-user.yaml 
  320  kubectl get pods,deploy,svc,sa -n kubernetes-dashboard
  321  kubectl create -f sample-user.yaml 
  322  kubectl get pods,deploy,svc,sa -n kubernetes-dashboard
  323  kubectl edit svc  -n kubernetes-dashboard
  324  kubectl get pods,deploy,svc,sa -n kubernetes-dashboard
  325  kubectl edit svc kubernetes-dashboard  -n kubernetes-dashboard
  326  kubectl get pods,deploy,svc,sa -n kubernetes-dashboard
  327  kubectl get pods -o wide -n kubernetes-dashboard
  328  curl ip-172-31-8-109:31401
  329  curl https://ip-172-31-8-109:31401
  330  kubectl get nodes 
  331  kubectl get secrets -n kubernetes-dashboard
  332  kubectl describe secret admin-user-1-token-kz5z5 -n kubernetes-dashboard
  333  kubectl get pods 
  334  kubectl get ns
  335  kubectl get nodes 
  336  ls
  337  cd ..
  338  ls
  339  cat 04-Deployment/helloworld.yml 
  340  ls
  341  cd 06-Dashboard/
  342  ls
  343  cat README.md 
  344  ls
  345  cd ..
  346  ls
  347  git pulll 
  348  cd ..; git pull
  349  kubectl get nodes --show-labels
  350  git pull 
  351  ls
  352  cd 02-K8s/
  353  ls
  354  cd 07-Labels/
  355  ls
  356  cat helloworld-nodeselector-1.yaml 
  357  kubectl create -f helloworld-nodeselector-1.yaml 
  358  kubectl delete deploy --all 
  359  kubectl create -f helloworld-nodeselector-1.yaml 
  360  kubectl get pods 
  361  kubectl delete my-webapp tomcat-app
  362  kubectl delete pod  my-webapp tomcat-app
  363  kubectl get pods 
  364  kubectl describe pods helloworld-deployment-57986b947d-jhvvx
  365  ls
  366  cat helloworld-nodeselector-2.yaml 
  367  kubectl create -f helloworld-nodeselector-2.yaml 
  368  kubectl get pods 
  369  cat helloworld-nodeselector-2.yaml 
  370  kubectl get nodes --show-labels
  371  kubectl label nodes ip-172-31-5-80 hardware=virtual
  372  kubectl get nodes --show-labels
  373  kubectl get pods 
  374  kubectl get pods -o wide 
  375  kubectl scale --replicas=5 deploy helloworld-deployment
  376  kubectl get pods -o wide 
  377  kubectl get nodes --show-labels
  378  kubectl label nodes ip-172-31-8-109 hardware=virtual
  379  kubectl get pods -o wide 
  380  kubectl delete pod helloworld-deployment-57986b947d-8plqq
  381  kubectl get pods -o wide 
  382  kubectl scale --replicas=10 deploy helloworld-deployment
  383  kubectl get pods -o wide 
  384  cat helloworld-nodeselector-2.yaml 
  385  kubectl label nodes ip-172-31-8-109 env=prod
  386  kubectl get pods -o wide 
  387  ls
  388  cat README.md 
  389  ls
  390  cd ..
  391  ls
  392  history > Day3_History.txt 
  393  cd ..
  394  cd ../; git add . ; git commit -m "Day3_History.txt"; git push 
  395  lls
  396  cd - 
  397  cd ../; git add . ; git commit -m "Day3_History.txt"; git push 
  398  cd -; git add . ; git commit -m "Day3_History.txt"; git push 
  399  git pull 
  400  ls
  401  cd 02-K8s/
  402  ls
  403  cd 08-HealthCheck/
  404  ls
  405  cat pod-prob-exec.yaml 
  406  ls
  407  cat helloworld-healthcheck.yml 
  408  kubectl get pods 
  409  kubectl delete pods --all
  410  kubectl delete deploy --all
  411  kubectl get pods 
  412  ls
  413  kubectl create -f helloworld-healthcheck.yml
  414  kubectl get deploy 
  415  kubectl get pods 
  416  kubectl describe pod helloworld-deployment-585fb455cb-75b2n
  417  kubectl get pods 
  418  kubectl edit deploy helloworld-deployment
  419  kubectl get pods 
  420  kubectl get pods -w
  421  kubectl describe pod helloworld-deployment-6d7d9cf544-c9pb5
  422  kubectl get pods -w
  423  kubectl get pods
  424  kubectl describe pod helloworld-deployment-6d7d9cf544-c9pb5
  425  kubectl get pods
  426  kubectl edit deploy helloworld-deployment
  427  kubectl get pods
  428  ls
  429  cat helloworld-healthcheck-readyness.yaml 
  430  ls
  431  kubectl delete -f helloworld-healthcheck.yml 
  432  ls
  433  kubectl create -f helloworld-healthcheck-readyness.yaml 
  434  kubectl get pods 
  435  kubectl describe pod helloworld-deployment-69fd75899f-gt4jx
  436  kubectl delete -f helloworld-healthcheck-readyness.yaml 
  437  ls
  438  cat pod-prob-exec.yaml 
  439  kubectl create -f pod-prob-exec.yaml 
  440  kubectl get pods 
  441  kubectl describe pod liveness-exec
  442  kubectl get pods 
  443  kubectl get pods -w
  444  kubectl describe pod liveness-exec
  445  ls
  446  kubectl get pods
  447  kubectl delete -f pod-prob-exec.yaml 
  448  ls
  449  cd ..
  450  ls
  451  kubectl get pods 
  452  ls
  453  cd ..
  454  ls
  455  git pull 
  456  ls
  457  cd 02-K8s/
  458  ls
  459  cd 09-Secrets/
  460  ls
  461  cat helloworld-secrets.yml 
  462  echo "root" | base64
  463  echo -n "root" | base64
  464  echo -n "amitvashist7" | base64
  465  echo -n "Pass@word1234" | base64
  466  sed -i "s/cm9vdA==/YW1pdHZhc2hpc3Q3/g" helloworld-secrets.yml 
  467  sed -i "s/cGFzc3dvcmQ=/UGFzc0B3b3JkMTIzNA==/g" helloworld-secrets.yml 
  468  ls
  469  kubectl get secrets 
  470  kubectl create -f helloworld-secrets.yml 
  471  cat helloworld-secrets.yml 
  472  kubectl get secrets 
  473  ls
  474  cat helloworld-secrets-volumes.yml 
  475  kubectl create -f helloworld-secrets-volumes.yml 
  476  kubectl get pods 
  477  kubectl describe pod helloworld-deployment-6bb4d96fc8-6bxkb
  478  kubectl exec -it helloworld-deployment-6bb4d96fc8-6bxkb -- /bin/sh
  479  ls
  480  cd ..
  481  ls
  482  history > Day3_History.txt 
